'use strict';

//Как я и говорил, будемрассматривать jquery уже на сверстанном сайте

$(function(){

//ПОЛУЧЕНИЕ ЭЛЕМЕНТОВ

//Итак, чтобы получить элемент с дом дерева нам понадобится вот эта функция $()
//Она работает как document.querySelectorAll('')

let elementA = $('a');
console.log(elementA);

const a = $('.logo');
console.log(a);

//Работает также. В консоли выдает массив.
//Но в jquery можно выбирать и вложенные элементы, то есть использовать вложенные селекторы как и в css

console.log($('nav menu'));
console.log($('nav menu li'));
console.log($('.icons > div')); //Также есть такая фича, которая указывает, что что-то будет применяться только к дочерним элементам именно этого родителя
console.log($('.icons img + 4')); //Такой вот синтаксис еще есть. Этот плюсик селектит соседний тег после img, который находится в .icons
//Тоже самое можно применять и в css

console.log($('img[href=portfolio]')); //Это мы выбрали элемент по атрибуту. в квадратных скобках нужно все четко прописывать только без кавычек

//Самое главное еще помнить, что если мы выбрали один элемент на странице, то к немувсе свойства применяются, а если несколько, то создается псевдомассив у которого нет свойств
//только forEach()

// .... Эт я сделал,потому что это не все варианты селекторов, которые существкют в jquery

//___________________________________________________________________________________________________________________________________

//ОЖИДАНИЕ ФОРМИРОВАНИЯ DOM

// Чтобы поставить наши ссылки в тег head, нам нужно прописать функцию, которая будет выполнять остальной код после загрузки дом дерева

// $(document).ready(function(){
     //Разумеется она не будет работать, так как нужно ее вначале прописывать    
// });

//___________________________________________________________________________________________________________________________________

//Методы text hide show

let p = $('.mainText p');
let h2 = $('.mainText h2');
console.log(p.text());
p.text('Давай по новой миха, все хуйня');
//с помощью этого свойства мы сохранили значение текста в переменную. Разумеется в str формате, который даже в дальнейшем можем изменять

//p.hide(3000, function(){

//}); //Тут все логично, мы просто скрыли содержимое тега. Именно тег полностью
//В этот метод можно поставить цифорки. Это время за которое будет исчезать элемент 
// А также вторым аргументом приписать или вызвать функцию, которая будет выполняться после исчезновения
//p.show(2000); //Тоже самое только теперь тег появляется 
//h2.hide(3000).show(2000); 
//h2.hide(3000).text('new text').show(2000); 
//в jquery есть такая фича как цепные функции, чтобы компу заново не приходилось искать переменную или элемент на странице

//___________________________________________________________________________________________________________________________________

//Автоматические циклы

$('.icons > div').hide();

//Суть этих автоматических циклов заключается в том, что какие методы или события применяются сразу ко всем элементам, даже
//к которым появляются динамически. То есть происходит автоматическое делегирование

//___________________________________________________________________________________________________________________________________

//Методы width и height, html

// let btnWidth = $('.btn').width();
// alert(`Ширина какой-то кнопки: ${btnWidth}`);  
// $('.mainText').width(100);
// $('.mainText').height(100);

//Тоже самое с выстотой, даже прописывать не буду.
//Смысл в том, что из стилей jquery берет значения и показывает их. Ничего особенного

const button = $('.btn');

function widthAndHeigth(element){
    let classname = '.'+element;
    let w = $(classname).width();
    let h = $(classname).height();
    const newText = document.createElement('p');
    newText.after($('.mainText p'));
    newText.text(`Width: ${w}, Heigth: ${h}`);
}

button.addEventListener('click', widthAndHeigth('mainText'));


});