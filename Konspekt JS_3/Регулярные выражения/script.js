'use strict';

//регулярные выражения облегчают работу со строками. Удаляют, заменяют, вырезают

//     new RegExp('patterns', 'flags'); //старый синтакисис
//     /pattern/flags                   //новый синтаксис

const ans = prompt('enter your name:');

const reg = /n/igm;

console.log(ans.search(reg));

//Итак, структура, которая прописана выдает в консоль позицию буквы n, не ее количетсво в слова, а именно позицию.
//Если бы в имени не было буквы n, то в консоле было бы -1
//Итак, чтобы расширить наш поиск, мы используем флаги
//Всего три классических флага
i //Если хотим найти что-то в любом регистре
g //global. находит сразу несколько вхождений
m //многострочный режим

//их можно комбинировать
//search фвляется самым простым методом. Он находит только первое совпадение
console.log(ans.match(reg));
//match выдает же массив с большим количеством информации, которую мы можем использоватьс

const pass = prompt('Password');

console.log(pass.replace(/./g, "*")); //точка означает все элементы строки
//получается этими командами мы меняем все буквы на звездочки
//если же хотим заменить только точки, то нужно экранировать их бекслешом

//Разберем еще один метод. Это test

const quest = prompt('Say your name:');

const test = /n/igm;

console.log(test.test(quest)); //Здесь наоборот сначала выражение пишется,а потом строка, но синтакиси тот же
//Выдает этот код булиновое значение

const str = 'My naem is R2D2';

console.log(str.match(/\w\d\w\d/i)); // \w - слова \d - цифры

// \D - не числа
// \W - не слова 